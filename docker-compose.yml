version: '3'
services:
  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DELETE_RETENTION_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    restart: always

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"

  kafka_daily_reporter:
    build:
      context: ./Kafka_producer
      dockerfile: Dockerfile
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      DAY_SIMULATION_INTERVAL_SECONDS: 1
    depends_on:
      - kafka
      - zookeeper

  mongodb:
    image: mongo:latest
    container_name: mongodb
    command: mongod --bind_ip_all
    ports:
      - "27017:27017"
  kafka_consumer_check:
    build:
      context: ./Kafka_consumer
      dockerfile: Dockerfile
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
    depends_on:
      - kafka
      - zookeeper
      - mongodb


  web:
    build: ./flask_app
    depends_on:
      - mongodb
      - kafka
      - zookeeper
      - kafka_daily_reporter
      - kafka_consumer_check
    volumes:
      - ./flask_app:/code
    ports:
      - "80:80"



 